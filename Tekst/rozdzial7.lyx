#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass aghdpl
\options pdflatex
\use_default_options true
\maintain_unincluded_children false
\language polish
\language_package default
\inputencoding latin2
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language polish
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Interfejs użytkownika
\end_layout

\begin_layout Standard
W poprzednim rozdziale opisano wszystkie działania, które podjęto w celu
 dokonania pomiaru przemieszczenia i kąta obrotu układu.
 Dane przesłane do komputera nie mogą być jedynie wyświetlone po stronie
 komputera w postaci ciągu znaków, gdyż to praktycznie uniemożliwiałoby
 analizę otrzymywanych danych.
 Z tego względu konieczne jest odpowiednie przekształcenie otrzymanych danych
 w sposób, który umożliwi zobrazowanie zmierzonych przemieszczeń bądź obrotów.
 W tym celu przygotowano aplikację, której zadaniem jest odbiór i wyświetlenie
 wyników w formie graficznej.
 Wykorzystano do tego platformę .NET i język C# z wykorzystaniem 
\emph on
Windows Forms
\emph default
 dla stworzenia interfejsu.
 Powodem wyboru tej technologii była względna prostota oraz mnogość klas
 i technik, które umożliwiały osiągnięcie postawionego celu na systemie
 Windows.
 
\end_layout

\begin_layout Section
Okno główne aplikacji
\end_layout

\begin_layout Standard
Okno główne zrealizowanego programu przedstawiono na rysunku 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Okno-główne-programu"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename rys/aplikacja/okno_glowne.png
	lyxscale 70
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Okno główne programu
\begin_inset CommandInset label
LatexCommand label
name "fig:Okno-główne-programu"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Otrzymane wyniki pomiaru przemieszczenia i kąta obrotu wypisane są w odpowiednic
h polach, dla każdej z osi osobno.
 Jednakże najważniejszym elementem aplikacji jest okno wyświetlania wyników
 pomiaru w formie graficznej.
 Sześcian symbolizuje układ pomiarowy, dodatkowo przedstawiono osie układu
 współrzędnych: oś X jest koloru niebieskiego, oś Y - czerwonego a oś Z
 jest żółta.
 Dzięki temu można łatwiej zaobserwować wszelkie przemieszczenia i zmiany
 kąta względem położenia początkowego.
 Poniżej okna wizualizacji umieszczono trzy przełączniki zgrupowane w panelu
 
\emph on
Tryb pomiaru
\emph default
.
 Umożliwiają one przełączanie się pomiędzy trzema różnymi trybami wizualizacji.
 
\emph on
Obrót
\emph default
 umożliwia obserwację jedynie wyników pracy żyroskopu, 
\emph on
Przemieszczenie
\emph default
 wyłącza wizualizację obrotów bryły pozostawiając tylko przemieszczenie,
 a ostatni przełącznik pozwala na pełny podgląd wyników pomiarów.
 Przycisk 
\emph on
Ustawienia
\emph default
 pozwala na zmianę parametrów połączenia w osobnym oknie.
 Zostanie ono szczegółowo opisane w kolejnej części.
 Wciśnięcie przycisku 
\emph on
O programie
\emph default
 wyświetla informację o zrealizowanej pracy inżynierskiej (rysunek 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Okno-informacji-o-programie"

\end_inset

).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename rys/aplikacja/info.png
	lyxscale 70
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Okno informacji o programie
\begin_inset CommandInset label
LatexCommand label
name "fig:Okno-informacji-o-programie"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Za rozpoczęcie i zakończenie pomiarów odpowiadają przyciski 
\emph on
Rozpocznij pomiar
\emph default
 i
\emph on
 Zakończ pomiar
\emph default
.
 W danej chwili tylko jeden z przycisków jest aktywny, dzięki czemu nie
 ma możliwości wielokrotnego zainicjalizowania/zakończenia połączenia z
 wykorzystaniem interfejsu szeregowego.
 W przypadku próby nawiązania połączenia bez odpowiednio skonfigurowanych
 parametrów połączenia wyświetlony zostanie odpowiedni komunikat informujący
 o konieczności poprawienia wprowadzonych danych (rysunek 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Okno-błędu-połączenia"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename rys/aplikacja/blad.png
	lyxscale 70
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Okno błędu połączenia z portem COM
\begin_inset CommandInset label
LatexCommand label
name "fig:Okno-błędu-połączenia"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Okno ustawień
\end_layout

\begin_layout Standard
Okno ustawień parametrów transmisji szeregowej przedstawiono na ilustracji
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Opcje-programu"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename rys/aplikacja/opcje.png
	lyxscale 70
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Opcje programu
\begin_inset CommandInset label
LatexCommand label
name "fig:Opcje-programu"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Kluczową klasą, która służy do przechowywania parametrów połączenia dostępnych
 i wybranych jest klasa statyczna 
\family typewriter
CommunicationParameters
\family default
.
 Klasa ta zapamiętuje wybrane parametry transmisji danych i tablice danych
 wyświetlanych w listach rozwijanych.
 Nazwy portów szeregowych dostępnych w danym komputerze otrzymano korzystając
 z metody 
\family typewriter
GetPortNames()
\family default
 klasy 
\family typewriter
SerialPort
\family default
 znajdującej się w przestrzeni nazw 
\emph on
System.Port.IO
\emph default
, wykorzystywanej w aplikacji do komunikacji z mikroprocesorem.
 Aby rozpocząć pomiar konieczne jest jedynie wybranie odpowiedniej nazwy
 portu.
 Reszta parametrów domyślnie ustawiona jest na wartości, które wybrano już
 w momencie konfiguracji komunikacji poprzez interfejs UART w mikroprocesorze.
 W przypadku zmiany tych parametrów, konieczne jest wybranie odpowiednich
 wartości w oknie opcji.
 Kliknięcie przycisku
\emph on
 Zapisz
\emph default
 powoduje zapamiętanie wybranych parametrów i powrót do okna głównego.
\end_layout

\begin_layout Section
Komunikacja z portem szeregowym
\end_layout

\begin_layout Standard
Pierwszym zadaniem było odebranie danych pomiarowych otrzymanych z mikroprocesor
a za pośrednictwem portu szeregowego.
 Za komunikację z tym portem odpowiedzialna jest klasa 
\family typewriter
COMPortManager
\family default
.
 W ramach tej klasy wykorzystano klasę biblioteczną 
\family typewriter
SerialPort
\family default
, o której wspomniano już wcześniej.
 Klasa ta umożliwia kontrolę portów szeregowych komputera.
 Zapewnia ona komunikację synchroniczną, sterowaną zdarzeniami wspierającą
 szereg typów kodowania: ASCII, UTF8, Unicode i UTF32.
 
\end_layout

\begin_layout Standard
Komunikacja z portem szeregowym odbywa się w puli wątków, dzięki czemu wykonywan
a jest ona w tle.
 W przypadku, gdy za pomocą tego portu otrzymane zostaną dane, wywoływane
 jest zdarzenie obsługiwane przez metodę 
\family typewriter
SerialPortDataRecieved()
\family default
.
 Odczytuje ona dane otrzymane z portu szeregowego i zapisuje je w postaci
 stringu.
 Następnie dane te są opakowywane w klasę 
\family typewriter
ReceivedDataEventArgs
\family default
, która odpowiada za przechowywanie danych zdarzenia.
 Potem wywoływane jest zdarzenie z uzyskanymi wynikami, które przekazuje
 je do głównego okna aplikacji.
 W klasie 
\family typewriter
COMPortManager
\family default
 jest również zaimplementowana metoda, której zadaniem jest wysyłanie do
 mikroprocesora komunikatu o treści ,,RESET
\begin_inset Quotes erd
\end_inset

, który powoduje wyzerowanie dotychczasowych wyników pomiarów.
\end_layout

\begin_layout Section
Przeliczenie otrzymanych wyników
\end_layout

\begin_layout Standard
Klasa 
\family typewriter
ApplicationWindow
\family default
, wyświetlająca główne okno aplikacji, odbiera dane z klasy 
\family typewriter
COMPortManager
\family default
 w procedurze obsługi zdarzenia.
 Dodatkowo metoda ta rozpoczyna się od sprawdzenia, czy wywoływanie nie
 jest wykonywane spoza głównego wątku.
 Jeśli taka sytuacja ma miejsce, metoda ta zapisywana jest jako delegat,
 który zostaje wykonany asynchronicznie z argumentami otrzymanymi z klasy
 obsługującej komunikację z portem szeregowym.
 
\end_layout

\begin_layout Standard
String zawierający wyniki odczytane z akcelerometru i żyroskopu zostaje
 następnie rozdzielony na poszczególne dane.
 Trzy pierwsze elementy zawierają uśrednione przyspieszenia, kolejne trzy
 to średnie prędkości zmierzone przez żyroskop.
 Zostają one zapisane do dwóch tablic łańcuchów znakowych, a
\begin_inset space ~
\end_inset

następnie przekształcone do postaci liczb całkowitych, które posłużą do
 dalszych przeliczeń.
\end_layout

\begin_layout Standard
W celu wyznaczenia przemieszczeń na podstawie uzyskanych przyspieszeń, należy
 dokonać ich dwukrotnego całkowania (
\begin_inset CommandInset citation
LatexCommand cite
key "acl_integrating"

\end_inset

).
 W tym celu wykorzystano metodę trapezów, znaną także jako metoda Tustina.
 Jest to metoda numeryczna, polegająca na zastąpieniu krzywej ciągłej (w
 tym wypadku przebiegu przyspieszenia) łamaną składającą się z odcinków
 łączących kolejne próbki pomiarowe.
 Pole pod krzywą (całka oznaczona) przybliża się polem pod łamaną.
 Korzystając z tej metody, można wyznaczyć składową prędkości w osi X w
 następujący sposób (
\begin_inset CommandInset citation
LatexCommand cite
key "acl_integrating"

\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
v_{x}^{n+1}=v_{x}^{n}+\left[a_{x}^{n}+\left(\frac{a_{x}^{n+1}-a_{x}^{n}}{2}\right)\right]\Delta t,\label{eq:metoda_trapezow}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
gdzie
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{x}^{n}$
\end_inset

-- wartość prędkości w osi 
\emph on
X
\emph default
 w 
\emph on
n
\emph default
-tym kroku obliczeniowym,
\end_layout

\begin_layout Itemize
\begin_inset Formula $a_{x}^{n}$
\end_inset

-- wartość przyspieszenia w osi 
\emph on
X
\emph default
 w 
\emph on
n
\emph default
-tym kroku obliczeniowym,
\end_layout

\begin_layout Itemize
\begin_inset Formula $\Delta t$
\end_inset

 -- krok całkowania (w tym wypadku okres próbkowania).
\end_layout

\begin_layout Standard
Analogicznie wyznacza się prędkości i położenia w pozostałych osiach.
\end_layout

\begin_layout Standard
W celu wyeliminowania wpływu szumów przy braku przyspieszenia, określono
 wartości progowe (rysunek 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:discrimination_win"

\end_inset

), które uznawane są za zakłócenia (
\begin_inset CommandInset citation
LatexCommand cite
key "acl_integrating"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename rys/obliczenia/discrimination_window.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Eliminacja szumów przy braku przyspieszenia (
\emph on
Źródło:
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "acl_integrating"

\end_inset

)
\begin_inset CommandInset label
LatexCommand label
name "fig:discrimination_win"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
Pamiętając, że akcelerometr nie mierzy przyspieszenia w 
\begin_inset Formula $\frac{m}{s^{2}}$
\end_inset

, lecz w surowych liczbach (ang.
 
\emph on
raw data
\emph default
), należało dokonać przeliczenia jednostek biorąc pod uwagę czułość sensora.
\end_layout

\begin_layout Standard
Analogicznie postąpiono całkując prędkości kątowe mierzone przez żyroskop
 w celu obliczenia kątów.
 Jak zostało wcześniej powiedziane, pomiar taki obarczony jest błędem związanym
 z dryftem i eliminuje się go poprzez uwzględnienie pomiaru kąta akcelerometrem.
 Ogólnie można zapisać, że
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\alpha=k\alpha_{g}+\left(1-k\right)\alpha_{a},\label{eq:filtr_komplementarny}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
gdzie
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha_{g}$
\end_inset

-- kąt obliczony przy pomocy danych pomiarowych z żyroskopu,
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha_{a}$
\end_inset

-- kąt obliczony przy pomocy danych pomiarowych z akcelerometru,
\end_layout

\begin_layout Itemize

\emph on
k
\emph default
 -- współczynnik z przedziału (0 - 1).
\end_layout

\begin_layout Standard
Zależność 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:filtr_komplementarny"

\end_inset

 wyraża znaną w literaturze z dziedziny przetwarzania sygnałów filtrację
 komplementarną
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tutaj jakaś referencja
\end_layout

\end_inset

.
 W omawianym przypadku pozwala ona zniwelować błąd dryftu związany z żyroskopem
 oraz błąd pomiaru kąta przy pomocy akcelerometru, wynikający z obecności
 przyspieszeń innych niż grawitacyjne.
 Można powiedzieć również, że podana metoda łączy zalety pomiarów żyroskopem
 i akcelerometrem.
 Współczynnik 
\emph on
k
\emph default
 dobiera się empirycznie.
 Dokładniejsze wyniki, lecz dużo bardzie złożone obliczeniowo, daje filtracja
 Kallmana, szeroko opisywana w publikacjach z dziedziny przetwarzania sygnałów.
 W metodzie tej, wagi z jakimi brane są wielkości pochodzące od poszczególnych
 czujników obliczane są na bieżąco.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename rys/obliczenia/rpy.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Kąty 
\emph on
roll
\emph default
, 
\emph on
pitch
\emph default
 i 
\emph on
yaw
\emph default
 (
\emph on
Źródło:
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "RPY"

\end_inset

)
\begin_inset CommandInset label
LatexCommand label
name "fig:katy_rpy"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
W celu wyznaczenia kątów (rys.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:katy_rpy"

\end_inset

) 
\begin_inset Formula $\phi$
\end_inset

 oraz 
\begin_inset Formula $\theta$
\end_inset

 przy pomocy danych pochodzących z akcelerometru, można posłużyć się następujący
mi zależnościami (
\begin_inset CommandInset citation
LatexCommand cite
key "RPY"

\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
tan\left(\phi\right)=\frac{a_{y}}{a_{z}},\label{eq:roll_equation}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
tan\left(\theta\right)=\frac{-a_{x}}{\sqrt{a_{z}^{2}+a_{y}^{2}}},\label{eq:pitch_equation}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
gdzie 
\emph on
a
\begin_inset script subscript

\begin_layout Plain Layout
x
\end_layout

\end_inset


\emph default
, 
\emph on
a
\begin_inset script subscript

\begin_layout Plain Layout
y
\end_layout

\end_inset


\emph default
, 
\emph on
a
\begin_inset script subscript

\begin_layout Plain Layout
z
\end_layout

\end_inset


\emph default
 są przyspieszeniami (w naszym przypadku uśrednionymi przyspieszeniami)
 odpowiednio w osi X, Y i Z.
\end_layout

\begin_layout Standard
Jak widać, wzór 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pitch_equation"

\end_inset

 nie pozwala na poprawne określenie ćwiartki układu współrzędnych, w której
 znajduje się mierzony kąt.
 Ponadto jeśli składowe przyspieszenia w osiach Y i Z będą równe zeru, niemożliw
e będzie określenie kąta obrotu wokół osi X.
 Ma to proste uzasadnienie fizyczne -- składowe 
\emph on
a
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
y
\end_layout

\end_inset


\emph default
 i 
\emph on
a
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
z
\end_layout

\end_inset


\emph default
 będą równe jednocześnie zeru, gdy oś X będzie równoległa do wektora grawitacji.
 Wówczas obrót wokół osi X jest ,,niewidoczny
\begin_inset Quotes erd
\end_inset

 dla akcelerometru, gdyż nie rejestruje on żadnych zmian przyspieszenia
 we wszystkich osiach.
\end_layout

\begin_layout Standard
W celu wyznaczenia kąta 
\begin_inset Formula $\psi$
\end_inset

 należy zastosować magnetometr (
\begin_inset CommandInset citation
LatexCommand cite
key "RPY"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "RPY_compas"

\end_inset

).
 Jest to przyrząd potrafiący mierzyć wartość ziemskiego pola magnetycznego.
 Jeśli umieścimy kompas tak, by jego płaszczyzna XY była równoległa do powierzch
ni ziemi, to obracanie nim wokół osi Z spowoduje, że będzie rejestrował
 różne wartości pola magnetycznego w osiach X i Y.
 Składowe te mogą posłużyć do oszacowania kata obrotu.
\end_layout

\begin_layout Standard
Otrzymane wyniki zapisywane są do odpowiednich pól tekstowych w oknie głównym
 aplikacji.
 Ze względu na fakt, iż wyliczone wartości nie mogą być bezpośrednio zapisane
 do klasy działającej w innym wątku, konieczne było zastosowanie metody
 
\family typewriter
Invoke()
\family default
 klasy 
\family typewriter
Dispatcher
\family default
 na obiekcie okna wizualizacji.
 Klasa 
\family typewriter
Dispatcher
\family default
 umożliwia zarządzenia kolejką elementów roboczych dla danego wątku, w tym
 wypadku okna wizualizacji.
 Metoda 
\family typewriter
Invoke()
\family default
 jako argument przyjmuje delegat do funkcji, która zostanie na tym wątku
 wykonana.
 Tą funkcją jest metoda klasy 
\family typewriter
ApplicationWindow
\family default
 o nazwie 
\family typewriter
ApplyMovement()
\family default
, która jako argumenty przyjmuje dwie tablice danych z wynikami z obu urządzeń
 pomiarowych.
 Wartości te są przypisywane do odpowiednich zmiennych.
 Należy tutaj zaznaczyć, że w
\begin_inset space ~
\end_inset

przypadku, gdy metoda ta wywoływana jest po raz pierwszy, wyniki pomiaru
 przesunięcia/obrotu są bezpośrednio wpisywane do odpowiednich zmiennych
 w obiekcie okna wizualizacji, a ich wartości zapamiętywane w odpowiedniej
 zmiennej w klasie 
\family typewriter
ApplicationWindow
\family default
.
 Każdy kolejny pomiar skutkuje zapisaniem do okna liczby będącej różnicą
 poprzedniej i obecnej.
 Dzięki temu, aktualizacja pozycji sześcianu skutkuje jego przesunięciem
 jedynie o wartość będącą różnicą pomiędzy dwoma kolejnymi pomiarami.
 Po zapisaniu wartości zmiennych, wywoływana jest w oknie metoda, której
 zadaniem jest wykonanie wszystkich transformacji na sześcianie.
 
\end_layout

\begin_layout Standard
Metoda powodująca usunięcie wszystkich transformacji również jest wywoływana
 z wykorzystaniem metody 
\family typewriter
Invoke()
\family default
 klasy 
\family typewriter
Dispatcher
\family default
.
 Dzięki niej można przywrócić domyślne położenie sześcianu i rozpocząć pomiar
 od początku, określając bieżące położenie układu jako domyślne.
 Metoda ta jest wywoływana każdorazowo przy przełączaniu trybu wizualizacji,
 jak również po zakończeniu pomiaru.
\end_layout

\begin_layout Section
Wizualizacja danych
\end_layout

\begin_layout Standard
Biorąc pod uwagę założenia przyjęte przed realizacją pracy, był to najważniejszy
 etap w tworzeniu interfejsu użytkownika.
 Konieczny był wybór takiej technologii, która dobrze współgrała z resztą
 programu napisaną w języku C#, a jednocześnie zapewniałaby duże możliwości
 wizualizacji danych w postaci obiektów trójwymiarowych.
 Z tego względu zdecydowano się skorzystać z 
\emph on
Windows Presentation Foundation
\emph default
.
 Jest to silnik graficzny oparty o grafikę wektorową, który daje duże możliwości
 tworzenia aplikacji.
 API w WPF opiera się na języku XML, a dokładniej wykorzystuje jego implementacj
ę o
\begin_inset space ~
\end_inset

nazwie XAML.
 Zapewnia on powiązanie pomiędzy interfejsem a logiką i umożliwia tworzenie
 zaawansowanych kontrolek, grafiki 2D i 3D, animacji, dokumentów, multimediów
 czy też tekstu.
 Dodatkową zaletą jest fakt, iż 
\emph on
Windows Presentation Foundation
\emph default
 jest zawarta w Microsoft .NET Framework, co czyni ją łatwo dostępną i zdolną
 do pracy z innymi elementami biblioteki .NET Framework.
\end_layout

\begin_layout Standard
Okno wizualizacji zbudowane zostało jako biblioteka łączona dynamicznie.
 Takie rozwiązanie jest konieczne ze względu na fakt, iż okno stworzone
 w WPF będzie umieszczone w interfejsie stworzonym za pomocą 
\emph on
Windows Forms
\emph default
.
 Dodatkowo konieczne było podłączenie kilku bibliotek, które są niezbędne
 w poprawnym działaniu aplikacji.
 
\end_layout

\begin_layout Standard
Podstawowym elementem tworzącym grafikę 3D jest trójkąt.
 Stworzenie za pomocą trójkątów sześcianu nie jest szczególnie trudnym wyzwaniem.
 Problemem okazało się narysowanie za pomocą trójkąta linii, które oznaczały
 osie układu współrzędnych.
 Teoretycznie linię można narysować z wykorzystaniem odpowiednio przeskalowanego
 prostokąta, lecz w takim wypadku pojawia się problem z zapewnieniem odpowiednie
go oświetlenia i ustawienia kamery.
 Ze względu na znaczne trudności, jakie mogła nieść ze sobą implementacja
 tego rozwiązania, zdecydowano się na wykorzystanie biblioteki 
\emph on
3DTools
\emph default
 przygotowanej przez Microsoft.
 Zawiera ona klasę 
\family typewriter
ScreenSpaceLines3D
\family default
, które pozwalają na proste kreślenie linii.
\end_layout

\begin_layout Standard
Jak już wspomniano w poprzednim paragrafie, dwie metody klasy 
\family typewriter
ApplicationWindow
\family default
 operują bezpośrednio na danych klasy 
\family typewriter
MainWindow
\family default
, odpowiadającej za wizualizację wyników pomiaru.
 Najważniejszą z metod w tej klasie jest metoda 
\family typewriter
ApplyTransformation()
\family default
, która na podstawie danych zapisanych przez metodę 
\family typewriter
ApplyMovement()
\family default
 z interfejsu wykonuje odpowiednie transformacje na sześcianie.
 W tym celu wykorzystywane są dwie klasy: 
\family typewriter
AxisAngleRotation3D
\family default
 i
\begin_inset space ~
\end_inset


\family typewriter
TranslateTransform3D
\family default
.
 Klasa 
\family typewriter
AxisAngleRotation3D
\family default
 służy do obracania danego obiektu.
 Do jej poprawnej pracy konieczne jest podanie osi obrotu i kąta, o jaki
 należy obrócić obiekt.
 
\family typewriter
TranslateTransform3D
\family default
 przesuwa obiekt o dany wektor.
 Współrzędne tego wektora to wartości otrzymane z akcelerometru.
 Tak przygotowane obiekty tych klas dodaje się do kolekcji transformacji
 przypisanych do obiektu, w tym przypadku sześcianu.
\end_layout

\begin_layout Standard
Powrót do stanu początkowego realizowany jest w metodzie 
\family typewriter
RemoveAllTransformations
\family default
.
 Odczytywana jest kolekcja transformacji, które wykonano na obiekcie, a
 następnie są one usuwane w kolejności odwrotnej do dodania.
 Dzięki temu mamy pewność, że wszystkie przesunięcia i obroty zostaną poprawnie
 usunięte i obiekt powróci do domyślnego położenia.
 Niestety w wyniku kolejkowania danych otrzymanych z mikroprocesora może
 dojść do sytuacji, gdy po usunięciu wszystkich transformacji, dane otrzymane
 po resecie spowodują przesunięcie sześcianu.
 Jednakże wartości te nie wpływają znacząco na pogorszenie jakości otrzymanych
 wyników.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand nocite
key "3Dtools,draw_cube,net_class_library,serial_port,transformations,uart_interupt,wpf3D_in_wf,wpf_in_wf"

\end_inset


\begin_inset CommandInset citation
LatexCommand nocite
key "wpf_lines"

\end_inset


\end_layout

\end_body
\end_document
